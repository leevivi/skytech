<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.skytech.api.mapper.PhysiologicalIndexMapper">
  <resultMap id="BaseResultMap" type="com.skytech.api.model.PhysiologicalIndex">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="data_name" jdbcType="VARCHAR" property="dataName" />
    <result column="tag_name" jdbcType="VARCHAR" property="tagName" />
    <result column="sort_num" jdbcType="INTEGER" property="sortNum" />
    <result column="data_unit" jdbcType="VARCHAR" property="dataUnit" />
    <result column="created_time" jdbcType="TIMESTAMP" property="createdTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, data_name, tag_name, sort_num, data_unit, created_time
  </sql>
  <select id="selectByExample" parameterType="com.skytech.api.model.PhysiologicalIndexExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from physiological_index
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from physiological_index
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from physiological_index
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.skytech.api.model.PhysiologicalIndexExample">
    delete from physiological_index
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.skytech.api.model.PhysiologicalIndex">
    insert into physiological_index (id, data_name, tag_name, 
      sort_num, data_unit, created_time
      )
    values (#{id,jdbcType=INTEGER}, #{dataName,jdbcType=VARCHAR}, #{tagName,jdbcType=VARCHAR}, 
      #{sortNum,jdbcType=INTEGER}, #{dataUnit,jdbcType=VARCHAR}, #{createdTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.skytech.api.model.PhysiologicalIndex">
    insert into physiological_index
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="dataName != null">
        data_name,
      </if>
      <if test="tagName != null">
        tag_name,
      </if>
      <if test="sortNum != null">
        sort_num,
      </if>
      <if test="dataUnit != null">
        data_unit,
      </if>
      <if test="createdTime != null">
        created_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="dataName != null">
        #{dataName,jdbcType=VARCHAR},
      </if>
      <if test="tagName != null">
        #{tagName,jdbcType=VARCHAR},
      </if>
      <if test="sortNum != null">
        #{sortNum,jdbcType=INTEGER},
      </if>
      <if test="dataUnit != null">
        #{dataUnit,jdbcType=VARCHAR},
      </if>
      <if test="createdTime != null">
        #{createdTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.skytech.api.model.PhysiologicalIndexExample" resultType="java.lang.Integer">
    select count(*) from physiological_index
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update physiological_index
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.dataName != null">
        data_name = #{record.dataName,jdbcType=VARCHAR},
      </if>
      <if test="record.tagName != null">
        tag_name = #{record.tagName,jdbcType=VARCHAR},
      </if>
      <if test="record.sortNum != null">
        sort_num = #{record.sortNum,jdbcType=INTEGER},
      </if>
      <if test="record.dataUnit != null">
        data_unit = #{record.dataUnit,jdbcType=VARCHAR},
      </if>
      <if test="record.createdTime != null">
        created_time = #{record.createdTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update physiological_index
    set id = #{record.id,jdbcType=INTEGER},
      data_name = #{record.dataName,jdbcType=VARCHAR},
      tag_name = #{record.tagName,jdbcType=VARCHAR},
      sort_num = #{record.sortNum,jdbcType=INTEGER},
      data_unit = #{record.dataUnit,jdbcType=VARCHAR},
      created_time = #{record.createdTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.skytech.api.model.PhysiologicalIndex">
    update physiological_index
    <set>
      <if test="dataName != null">
        data_name = #{dataName,jdbcType=VARCHAR},
      </if>
      <if test="tagName != null">
        tag_name = #{tagName,jdbcType=VARCHAR},
      </if>
      <if test="sortNum != null">
        sort_num = #{sortNum,jdbcType=INTEGER},
      </if>
      <if test="dataUnit != null">
        data_unit = #{dataUnit,jdbcType=VARCHAR},
      </if>
      <if test="createdTime != null">
        created_time = #{createdTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.skytech.api.model.PhysiologicalIndex">
    update physiological_index
    set data_name = #{dataName,jdbcType=VARCHAR},
      tag_name = #{tagName,jdbcType=VARCHAR},
      sort_num = #{sortNum,jdbcType=INTEGER},
      data_unit = #{dataUnit,jdbcType=VARCHAR},
      created_time = #{createdTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>